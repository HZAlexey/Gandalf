document.addEventListener("DOMContentLoaded", function () {
    const createVorwandButton = document.getElementById("create-vorwand-button");
    const changeTypeSelect = document.getElementById("change_type");
    const vorwandLink = document.getElementById("vorwand-link");
    const generatedIdInput = document.getElementById("generated-id");
    const linkToCardInput = document.getElementById("link_to_card");
    const changeBranch = document.getElementById("change_branch");

    // üîπ –§—É–Ω–∫—Ü–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏/—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ "–°–≤—è–∑—å —Å –∫–∞—Ä—Ç–æ—á–∫–æ–π"
    function updateLinkToCardState() {
        const selectedChangeType = changeTypeSelect.value;
        const changeTypeLabel = document.querySelector('label[for="link_to_card"]');

        if (selectedChangeType === '–ù–æ–≤–∞—è –æ—Ä–≥-—Ü–∏—è') {
            linkToCardInput.disabled = true;
            linkToCardInput.value = "";
            changeTypeLabel.classList.add('disabled-style');
        } else {
            linkToCardInput.disabled = false;
            changeTypeLabel.classList.remove('disabled-style');
        }
    }

    // üîπ –§—É–Ω–∫—Ü–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏/—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ "–ü—Ä–æ–µ–∫—Ç"
    function updateChangeBranch() {
        const selectedChangeType = changeTypeSelect.value;
        const changeTypeLabel = document.querySelector('label[for="change_branch"]');

        if (selectedChangeType === '–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ—Ä–≥-—Ü–∏–∏') {
            changeBranch.disabled = true;
            changeBranch.value = "";
            changeTypeLabel.classList.add('disabled-style');
        } else {
            changeBranch.disabled = false;
            changeTypeLabel.classList.remove('disabled-style');
        }
    }

    // üîπ –û–±–Ω–æ–≤–ª—è–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ "–¢–∏–ø –∏–∑–º–µ–Ω–µ–Ω–∏—è"
    changeTypeSelect.addEventListener("change", function () {
        updateLinkToCardState();
        updateChangeBranch();
    });

    // üîπ –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã, —á—Ç–æ–±—ã —Å—Ä–∞–∑—É –ø—Ä–∏–º–µ–Ω–∏—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
    updateLinkToCardState();
    updateChangeBranch();

    // üîπ –õ–æ–≥–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—Ü–µ–ø–∫–∏
    createVorwandButton.addEventListener("click", async function () {
        createVorwandButton.disabled = true;
        createVorwandButton.textContent = "–û–∂–∏–¥–∞–Ω–∏–µ...";

        const selectedCityCode = changeBranch.value;
        const cardSyncode = linkToCardInput.value;
        const changeType = changeTypeSelect.value;

        if (changeType === "–ù–æ–≤–∞—è –æ—Ä–≥-—Ü–∏—è" && !selectedCityCode) {
            alert("–ü—Ä–æ–µ–∫—Ç –Ω–µ –≤—ã–±—Ä–∞–Ω!");
            resetButton();
            return;
        }

        if (changeType === "–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ—Ä–≥-—Ü–∏–∏" && !cardSyncode) {
            alert("–í–≤–µ–¥–∏—Ç–µ syncode –∫–∞—Ä—Ç–æ—á–∫–∏!");
            resetButton();
            return;
        }

        let apiUrl;
        let requestData = {};

        if (changeType === "–ù–æ–≤–∞—è –æ—Ä–≥-—Ü–∏—è") {
            apiUrl = "/api/create-vorwand";
            requestData.city_code = selectedCityCode;
        } else if (changeType === "–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ—Ä–≥-—Ü–∏–∏") {
            apiUrl = "/api/update-vorwand";
            requestData.card_syncode = cardSyncode;
        } else {
            alert("–ù–µ –≤—ã–±—Ä–∞–Ω —Ç–∏–ø –∏–∑–º–µ–Ω–µ–Ω–∏—è!");
            resetButton();
            return;
        }

        try {
            const response = await fetch(apiUrl, {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(requestData),
            });

            const data = await response.json();

            if (!response.ok) {
                throw new Error(data.error || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞");
            }

            generatedIdInput.value = data.vorwand_id || "–û—à–∏–±–∫–∞!";

            if (data.vorwand_id) {
                vorwandLink.href = `https://${sessionHostname}/vorwand#/id=${data.vorwand_id}`;
                vorwandLink.style.display = "inline";
            } else {
                vorwandLink.style.display = "none";
            }
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ:", error);
            showError(error.message);
        } finally {
            resetButton();
        }
    });

    function resetButton() {
        createVorwandButton.disabled = false;
        createVorwandButton.textContent = "–°–æ–∑–¥–∞—Ç—å –∑–∞—Ü–µ–ø–∫—É";
    }

    function showError(message) {
    let errorLabel = document.getElementById("error-message");

    if (!errorLabel) {
        errorLabel = document.createElement("div");
        errorLabel.id = "error-message";
        errorLabel.style.color = "red";
        errorLabel.style.position = "absolute";  // ‚úÖ –†–∞–∑–º–µ—â–∞–µ–º —Å–ø—Ä–∞–≤–∞
        errorLabel.style.left = "100%";  // ‚úÖ –°–º–µ—â–∞–µ–º –≤–ø—Ä–∞–≤–æ –æ—Ç input
        errorLabel.style.top = "50%";  // –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –ø–æ –≤—ã—Å–æ—Ç–µ
        errorLabel.style.transform = "translateY(-50%)";  // –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ–º –ø–æ–∑–∏—Ü–∏—é
        errorLabel.style.whiteSpace = "nowrap";  // –ù–µ –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—å —Ç–µ–∫—Å—Ç
        errorLabel.style.paddingLeft = "10px";

        // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
        const container = document.createElement("div");
        container.style.position = "relative";  // ‚úÖ –î–µ–ª–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–º
        container.style.display = "inline-block";  // –û—Å—Ç–∞–≤–ª—è–µ–º input –≤ –ø–æ—Ç–æ–∫–µ

        // –í—Å—Ç–∞–≤–ª—è–µ–º input –≤–Ω—É—Ç—Ä—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
        linkToCardInput.parentNode.insertBefore(container, linkToCardInput);
        container.appendChild(linkToCardInput);
        container.appendChild(errorLabel);
    }

    errorLabel.textContent = message;
    errorLabel.style.display = "inline";  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É

    // ‚úÖ –ü—Ä–∏ –∫–ª–∏–∫–µ –≤ –ª—é–±–æ–µ –º–µ—Å—Ç–æ —Å–∫—Ä—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
    document.addEventListener("click", function hideError(event) {
        if (!linkToCardInput.contains(event.target) && event.target !== errorLabel) {
            errorLabel.style.display = "none";
            document.removeEventListener("click", hideError);
        }
    });
}
});