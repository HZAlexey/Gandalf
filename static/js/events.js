import { createVorwand } from "./api.js";
import { collectFormData } from "./form.js";
import { resetButton, updateUIAfterCreation } from "./ui.js";

export function setupCreateVorwand() {
    const createVorwandButton = document.getElementById("create-vorwand-button");
    const changeTypeSelect = document.getElementById("change_type");
    const changeBranch = document.getElementById("change_branch");
    const linkToCardInput = document.getElementById("link_to_card");

    if (!createVorwandButton || !changeTypeSelect || !changeBranch || !linkToCardInput) {
        console.error("‚ùå –û—à–∏–±–∫–∞: –û–¥–∏–Ω –∏–∑ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Ñ–æ—Ä–º—ã –Ω–µ –Ω–∞–π–¥–µ–Ω.");
        return;
    }

    function validateFields() {
        const selectedChangeType = changeTypeSelect.value;

        if (!selectedChangeType) {
            alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ '–¢–∏–ø –∏–∑–º–µ–Ω–µ–Ω–∏—è'!");
            return false;
        }

        if (selectedChangeType === "–ù–æ–≤–∞—è –æ—Ä–≥-—Ü–∏—è" && !changeBranch.value) {
            alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ '–ü—Ä–æ–µ–∫—Ç'!");
            return false;
        }

        if (selectedChangeType === "–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ—Ä–≥-—Ü–∏–∏" && !linkToCardInput.value) {
            alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ '–ö–∞—Ä—Ç–æ—á–∫—É'!");
            return false;
        }

        return true;
    }

    createVorwandButton.addEventListener("click", async function () {
        if (!validateFields()) return;

        createVorwandButton.disabled = true;
        createVorwandButton.textContent = "–û–∂–∏–¥–∞–Ω–∏–µ...";

        try {
            const { requestData, changeType } = collectFormData();
            const response = await fetch(`/api/${changeType === "–ù–æ–≤–∞—è –æ—Ä–≥-—Ü–∏—è" ? "create-vorwand" : "update-vorwand"}`, {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(requestData),
            });

            const data = await response.json();

            if (response.status === 404) {
                alert("–û—à–∏–±–∫–∞: –§–∏—Ä–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!");
                return;
            }

            if (!response.ok) {
                throw new Error(data.error || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞");
            }

            updateUIAfterCreation(data);
        } catch (error) {
            if (error.message.includes("–§–∏—Ä–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")) {
                alert(error.message);
            } else {
                console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ:", error);
                alert("–û—à–∏–±–∫–∞: " + error.message);
            }
        } finally {
            resetButton(createVorwandButton);
        }
    });
}


// –õ–æ–≥–∏–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–ª–µ–π
export function setupFieldStateManagement() {
    const changeTypeSelect = document.getElementById("change_type");
    const linkToCardInput = document.getElementById("link_to_card");
    const changeBranch = document.getElementById("change_branch");

// üîπ –§—É–Ω–∫—Ü–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏/—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ "–°–≤—è–∑—å —Å –∫–∞—Ä—Ç–æ—á–∫–æ–π"

    function updateLinkToCardState() {
        const selectedChangeType = changeTypeSelect.value;
        const changeTypeLabel = document.querySelector('label[for="link_to_card"]');

        if (selectedChangeType === "–ù–æ–≤–∞—è –æ—Ä–≥-—Ü–∏—è") {
            linkToCardInput.disabled = true;
            linkToCardInput.value = "";
            changeTypeLabel.classList.add('disabled-style');
        } else {
            linkToCardInput.disabled = false;
            changeTypeLabel.classList.remove('disabled-style');
        }
    }

// üîπ –§—É–Ω–∫—Ü–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏/—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ "–ü—Ä–æ–µ–∫—Ç"

    function updateChangeBranch() {
        const selectedChangeType = changeTypeSelect.value;
        const changeTypeLabel = document.querySelector('label[for="change_branch"]');

        if (selectedChangeType === "–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ—Ä–≥-—Ü–∏–∏") {
            changeBranch.disabled = true;
            changeBranch.value = "";
            changeTypeLabel.classList.add('disabled-style');
        } else {
            changeBranch.disabled = false;
            changeTypeLabel.classList.remove('disabled-style');
        }
    }

// üîπ –û–±–Ω–æ–≤–ª—è–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ "–¢–∏–ø –∏–∑–º–µ–Ω–µ–Ω–∏—è"

    changeTypeSelect.addEventListener("change", function () {
        updateLinkToCardState();
        updateChangeBranch();
    });

// –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    updateLinkToCardState();
    updateChangeBranch();
};


// –°–æ–±–∏—Ä–∞–µ–º —Ä—É–±—Ä–∏–∫–∏ –∏ —Å–æ–±—ã—Ç–∏—è –ø–æ –Ω–∏–º, —á—Ç–æ –±—ã —É–∫–∞–∑–∞—Ç—å —ç—Ç–æ –≤ –∑–∞–ø—Ä–æ—Å–µ

export function setupFormSubmission() {
    $(document).ready(function() {
        $('#submit-form').click(function() {
            let selectedRubrics = [];

            // –°–æ–±–∏—Ä–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Ä—É–±—Ä–∏–∫–∏ –∏ –∏—Ö –¥–µ–π—Å—Ç–≤–∏—è
            $('.rubric-group').each(function() {
                let rubricId = $(this).find('.rubric-select').val();  // –ü–æ–ª—É—á–∞–µ–º ID —Ä—É–±—Ä–∏–∫–∏
                let action = $(this).find('.rubric-action').val();  // "Create" –∏–ª–∏ "Delete"

                if (rubricId) {
                    selectedRubrics.push({ "id": rubricId, "action": action });  // ‚úÖ –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç
                }
            });

            let selectedCityCode = $('#change_branch').val();

            if (!selectedCityCode) {
                alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥!");
                return;
            }

            console.log("üìå –ü–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π rubrics:", selectedRubrics);  // ‚úÖ –õ–æ–≥–∏—Ä—É–µ–º –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
            $.ajax({
                url: "/api/create-vorwand",
                type: "POST",
                contentType: "application/json",
                data: JSON.stringify({
                    city_code: selectedCityCode,
                    rubrics: selectedRubrics
                }),
                success: function(response) {
                    console.log("‚úÖ –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", response);
                    $('#result').val(response.vorwand_id);
                },
                error: function(xhr) {
                    console.error("‚ùå –û—à–∏–±–∫–∞:", xhr.responseText);
                }
            });
        });
    });
};

// –õ–æ–≥–∏–∫–∞ —Å–∫—Ä—ã—Ç–∏—è –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏—è "–°–æ–∑–¥–∞—Ç—å" / "–£–¥–∞–ª–∏—Ç—å" –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω —Ç–∏–ø –ù–æ–≤–∞—è –æ—Ä–≥-—Ü–∏—è
import { changeTypeSelect } from "./domElements.js";

export function setupRubricVisibility() {
    function updateRubricVisibility() {
        const selectedChangeType = changeTypeSelect.value;
        const rubricActions = document.querySelectorAll(".rubric-action");

        if (selectedChangeType === "–ù–æ–≤–∞—è –æ—Ä–≥-—Ü–∏—è") {
            rubricActions.forEach(action => {
                action.style.display = "none";
            });
        } else {
            rubricActions.forEach(action => {
                action.style.display = "inline-block";
            });
        }
    }

    changeTypeSelect.addEventListener("change", updateRubricVisibility);

    // –í—ã–∑—ã–≤–∞–µ–º –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    updateRubricVisibility();
}