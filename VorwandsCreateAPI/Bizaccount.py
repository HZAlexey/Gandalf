import requests
import datetime
from flask import session, url_for  # –ò—Å–ø–æ–ª—å–∑—É–µ–º session –¥–ª—è hostname

class BizAccount:
    def prepare_phone(self):
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞"""
        now = datetime.datetime.now().strftime("%m%d%Y%H%M%S%f")
        phone = f"+7 (9{now[:2]}) {now[3:6]}-{now[6:8]}-{now[18:20]}"
        random_num = f"{now[16:20]}"
        return random_num #phone

    def bizaccount_create_vorwands(self, cookies, city_code, rubrics=None):

        phone = self.prepare_phone()

        # –ü–æ–ª—É—á–∞–µ–º hostname –∏–∑ session
        hostname = session.get('hostname')
        if not hostname:
            raise ValueError("–û—à–∏–±–∫–∞: hostname –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ session. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤—ã–±—Ä–∞–ª —Ç–µ—Å—Ç–æ–≤—É—é —Å—Ä–µ–¥—É.")

        # üîπ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º XML –¥–ª—è —Ä—É–±—Ä–∏–∫ (–µ—Å–ª–∏ –µ—Å—Ç—å)
        rubrics_xml = ""
        print("üìå –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ rubrics:", rubrics)  # ‚úÖ –õ–æ–≥–∏—Ä—É–µ–º –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ

        if rubrics:
            rubrics_xml = "<Rubrics>\n"

            for rubric in rubrics:
                # ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ rubric ‚Äî —ç—Ç–æ —Å–ª–æ–≤–∞—Ä—å —Å –∫–ª—é—á–∞–º–∏ "id" –∏ "action"
                if isinstance(rubric, dict) and "id" in rubric and "action" in rubric:
                    rubric_id = rubric["id"]
                    action = rubric["action"]  # "Create" –∏–ª–∏ "Delete"
                    rubrics_xml += f'    <Rubric ModificationType="{action}" Code="{rubric_id}"/>\n'
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ä—É–±—Ä–∏–∫–∏: {rubric}")  # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É

            rubrics_xml += "</Rubrics>\n"


        # ‚úÖ –§–æ—Ä–º–∏—Ä—É–µ–º XML-–∑–∞–ø—Ä–æ—Å (–¥–∞–∂–µ –µ—Å–ª–∏ –Ω–µ—Ç —Ä—É–±—Ä–∏–∫)
        data = {
            "xml": f"""<?xml version="1.0"?>
        <BizaccountVorwandRequestExtended Type="Create" CityCode="{city_code}">
        {rubrics_xml}
            <Name Name="Viking Coffee"/>
            <Contacts>
                <Contact ModificationType="Create" ContactType="Email" Value="vladimir.malov.88@mail.ru"/>
                <Contact ModificationType="Create" ContactType="Phone" Value="{phone}" CountryCode="1"/>
            </Contacts>
            <Schedules>
                <Schedule ModificationType="Update" Comment="" IsTemporarilyClosed="false">
                    <Day Label="Fri" From="09:00:00" To="18:00:00"/>
                    <Day Label="Mon" From="09:00:00" To="18:00:00"/>
                    <Day Label="Sat" From="09:00:00" To="18:00:00"/>
                    <Day Label="Sun"/>
                    <Day Label="Thu" From="09:00:00" To="18:00:00"/>
                    <Day Label="Tue" From="09:00:00" To="18:00:00"/>
                    <Day Label="Wed" From="09:00:00" To="18:00:00"/>
                </Schedule>
            </Schedules>
        </BizaccountVorwandRequestExtended>"""
        }

        # ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º XML –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
        print("\nüîπ –û–¢–ü–†–ê–í–õ–Ø–ï–ú XML:")
        print(data["xml"])
        print("üîπ –ö–û–ù–ï–¶ XML\n")

            #return {"xml": data}  # –¢–µ–ø–µ—Ä—å –≤–æ–∑–≤—Ä–∞—â–∞–µ–º XML –≤ JSON-–æ–±—ä–µ–∫—Ç–µ

        # –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Å –∫—É–∫–∞–º–∏
        headers = {
            "Content-Type": "application/json; charset=utf-8",
            "Cookie": cookies
        }

        # –§–æ—Ä–º–∏—Ä—É–µ–º URL —Å hostname
        url = f"http://{hostname}/api/Vorwands/Create/BizAccount/Extended"
        print(f"üöÄ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ {url}")
        print(f"üìú –î–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞: {data}")

        try:
            response = requests.post(url, json=data, headers=headers)

            if response.status_code == 401:
                print("‚ùå –û—à–∏–±–∫–∞ 401: –ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø. –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞.")
                session.pop("cookie", None)  # –£–¥–∞–ª—è–µ–º –∫—É–∫–∏ –∏–∑ —Å–µ—Å—Å–∏–∏
                return {"redirect": url_for("auth.login")}, 401  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–¥–∏—Ä–µ–∫—Ç

            response.raise_for_status()
            Vorwand_result = response.json()
            print("‚úÖ –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", Vorwand_result)
            return Vorwand_result

        except requests.exceptions.RequestException as e:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞:", e)
            return None

    def update_vorwand_request(self, cookies, firm_code, card_code):
        hostname = session.get('hostname')
        if not hostname:
            raise ValueError("–û—à–∏–±–∫–∞: hostname –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ session. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤—ã–±—Ä–∞–ª —Ç–µ—Å—Ç–æ–≤—É—é —Å—Ä–µ–¥—É.")

        phone = self.prepare_phone()

        data = {
            "xml": f"""<?xml version="1.0"?>
            <BizaccountVorwandRequestExtended Type="Update" FirmCode="{firm_code}" CardCode="{card_code}">
                <Rubrics>
                    <Rubric ModificationType="Create" Code="110358"/>
                </Rubrics>
                <Address Address="–î–∞—è–Ω–∞ –ú—É—Ä–∑–∏–Ω–∞, 7/1" BuildingSyncode="70030076269813188"/>
                <Contacts>
                    <Contact ModificationType="Create" ContactType="Phone" Value="{phone}" CountryCode="1"
                    Description="–ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞"/>
                </Contacts>
            </BizaccountVorwandRequestExtended>"""
        }

        headers = {
            "Content-Type": "application/json; charset=utf-8",
            "Cookie": cookies
        }

        url = f"http://{hostname}/api/Vorwands/Create/BizAccount/Extended"

        #print(f"üöÄ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ UPDATE –Ω–∞ {url}")
        #print(f"üìú –î–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞: {data}")

        try:
            response = requests.post(url, json=data, headers=headers)

            if response.status_code == 401:
                print("‚ùå –û—à–∏–±–∫–∞ 401: –ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø. –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞.")
                session.pop("cookie", None)  # –£–¥–∞–ª—è–µ–º –∫—É–∫–∏ –∏–∑ —Å–µ—Å—Å–∏–∏
                return {"redirect": url_for("auth.login")}, 401  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–¥–∏—Ä–µ–∫—Ç

            response.raise_for_status()
            Vorwand_result = response.json()
            print("‚úÖ –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", Vorwand_result)
            return Vorwand_result
        except requests.exceptions.RequestException as e:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞:", e)
            return None